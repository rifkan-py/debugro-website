---
import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import '../../styles/blog.css';

interface Props {
    post: CollectionEntry<'blogs'>;
}

export const getStaticPaths: GetStaticPaths = async () => {
    const blogPosts = await getCollection('blogs');
    return blogPosts.map((post: CollectionEntry<'blogs'>) => ({
        params: { slug: post.slug },
        props: { post },
    }));
};

const { post } = Astro.props;
const { Content } = await post.render();

// Format date with reading time estimate
const formatDate = (date: string | Date): string => {
    const dateObj = typeof date === 'string' ? new Date(date) : date;
    return dateObj.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
};

// Calculate reading time
const calculateReadingTime = (content: string): number => {
    const wordsPerMinute = 200;
    const wordCount = content.trim().split(/\s+/).length;
    return Math.ceil(wordCount / wordsPerMinute);
};

const readingTime = calculateReadingTime(post.body);
const formattedDate = formatDate(post.data.date || new Date());

// Share URLs
const shareUrls = {
    twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(post.data.title)}&url=${encodeURIComponent(`https://debugro.com/blogs/${post.slug}`)}`,
    linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(`https://debugro.com/blogs/${post.slug}`)}`,
};

// SEO data
const seoData = {
    title: `${post.data.title} - Debugro Blog`,
    description: post.data.description || `Read about ${post.data.title} on Debugro Blog`,
    keywords: (post.data.tags || []).join(', '),
    image: post.data.image || '/images/blog-default.jpg',
    canonicalUrl: `https://debugro.com/blogs/${post.slug}`
};
---

<Layout {...seoData}>
    <main class="min-h-screen bg-gradient-to-b from-[var(--blog-primary-dark)] to-[#00151e]">
        <div class="max-w-4xl mx-auto px-4 py-16 lg:py-24">
            {/* Navigation */}
            <a href="/blogs" 
               class="inline-flex items-center gap-2 text-[var(--blog-primary)] hover:text-[var(--blog-primary-light)] transition-colors mb-8">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Back to Blog
            </a>

            {/* Article Header */}
            <header class="mb-12">
                <h1 class="text-4xl lg:text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[var(--blog-primary-light)] to-[var(--blog-secondary)] mb-6">
                    {post.data.title}
                </h1>

                <div class="flex flex-wrap items-center gap-6 text-[var(--blog-text-muted)] mb-8">
                    {/* Author Info */}
                    {post.data.author && (
                        <div class="flex items-center gap-3">
                            {post.data.authorAvatar && (
                                <img 
                                    src={post.data.authorAvatar}
                                    alt={post.data.author}
                                    class="w-10 h-10 rounded-full ring-2 ring-[var(--blog-primary)]/20"
                                />
                            )}
                            <div>
                                <div class="text-[var(--blog-text-bright)] font-medium">{post.data.author}</div>
                                {post.data.authorRole && (
                                    <div class="text-sm text-[var(--blog-text-muted)]">{post.data.authorRole}</div>
                                )}
                            </div>
                        </div>
                    )}

                    {/* Post Meta */}
                    <div class="flex items-center gap-2">
                        <time datetime={new Date(post.data.date || new Date()).toISOString()}>
                            {formattedDate}
                        </time>
                        <span>â€¢</span>
                        <span>{readingTime} min read</span>
                    </div>
                </div>

                {/* Tags */}
                {post.data.tags && post.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2">
                        {post.data.tags.map((tag: string) => (
                            <span class="px-3 py-1 text-sm rounded-full bg-[var(--blog-primary)]/10 text-[var(--blog-primary-light)] backdrop-blur-sm">
                                {tag}
                            </span>
                        ))}
                    </div>
                )}
            </header>

            {/* Featured Image */}
            {post.data.image && (
                <div class="relative rounded-xl overflow-hidden mb-12 shadow-2xl">
                    <div class="absolute inset-0 bg-gradient-to-b from-transparent to-[var(--blog-primary-dark)]/20"></div>
                    <img 
                        src={post.data.image}
                        alt={post.data.title}
                        class="w-full h-[400px] object-cover"
                    />
                </div>
            )}

            {/* Article Content */}
            <article class="prose prose-invert prose-lg max-w-none mb-16">
                <Content />
            </article>

            {/* Share Section */}
            <div class="border-t border-[var(--blog-primary)]/10 pt-8">
                <h2 class="text-2xl font-bold mb-6 text-[var(--blog-text-bright)]">Share this article</h2>
                <div class="flex gap-4">
                    <a
                        href={shareUrls.twitter}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[var(--blog-primary)]/10 text-[var(--blog-primary-light)] hover:bg-[var(--blog-primary)]/20 transition-colors"
                    >
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"></path>
                        </svg>
                        Share on Twitter
                    </a>
                    <a
                        href={shareUrls.linkedin}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[var(--blog-primary)]/10 text-[var(--blog-primary-light)] hover:bg-[var(--blog-primary)]/20 transition-colors"
                    >
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                        </svg>
                        Share on LinkedIn
                    </a>
                </div>
            </div>
        </div>
    </main>
</Layout>

<style is:global>
    /* Base content styles */
    .prose {
        color: var(--blog-text);
        max-width: none;
    }

    /* Typography */
    .prose h2 {
        font-size: 1.875rem;
        line-height: 2.25rem;
        font-weight: var(--font-bold, 700);
        margin-top: 3rem;
        margin-bottom: 1.5rem;
        color: var(--blog-text-bright);
    }
    
    .prose h3 {
        font-size: 1.5rem;
        line-height: 2rem;
        font-weight: var(--font-semibold, 600);
        margin-top: 2rem;
        margin-bottom: 1rem;
        color: var(--blog-text-bright);
    }
    
    .prose p {
        margin-bottom: 1.5rem;
        line-height: 1.75;
        color: var(--blog-text);
    }

    .prose strong {
        color: var(--blog-text-bright);
        font-weight: var(--font-semibold, 600);
    }

    /* Lists */
    .prose ul {
        list-style-type: disc;
        list-style-position: outside;
        margin-bottom: 1.5rem;
        margin-left: 1.5rem;
        color: var(--blog-text);
    }
    
    .prose ol {
        list-style-type: decimal;
        list-style-position: outside;
        margin-bottom: 1.5rem;
        margin-left: 1.5rem;
        color: var(--blog-text);
    }

    .prose li {
        margin-bottom: 0.5rem;
    }

    /* Links */
    .prose a {
        color: var(--blog-primary);
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .prose a:hover {
        color: var(--blog-primary-light);
    }

    /* Code blocks */
    .prose pre {
        background: var(--blog-primary-dark-transparent);
        padding: 1rem;
        border-radius: 0.5rem;
        overflow-x: auto;
        margin-bottom: 1.5rem;
        backdrop-filter: blur(4px);
    }
    
    .prose code {
        background: var(--blog-primary-dark-transparent);
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 0.875rem;
        padding: 0.125rem 0.375rem;
        border-radius: 0.25rem;
        backdrop-filter: blur(4px);
        color: var(--blog-secondary-light);
    }
    
    .prose pre code {
        background: transparent;
        padding: 0;
        color: var(--blog-text);
    }

    /* Blockquotes */
    .prose blockquote {
        border-left: 4px solid var(--blog-primary-transparent);
        padding-left: 1rem;
        font-style: italic;
        margin: 1.5rem 0;
        color: var(--blog-text-muted);
    }

    /* Images and Figures */
    .prose img {
        max-width: 100%;
        height: auto;
        border-radius: 0.5rem;
        margin: 1.5rem 0;
        box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    }

    .prose figure {
        margin: 2rem 0;
    }

    .prose figcaption {
        font-size: 0.875rem;
        text-align: center;
        margin-top: 0.5rem;
        color: var(--blog-text-muted);
    }

    .prose hr {
        margin: 2rem 0;
        border: 0;
        border-top: 1px solid var(--blog-primary-transparent);
    }

    /* Tables */
    .prose table {
        width: 100%;
        border-collapse: collapse;
        margin: 2rem 0;
    }

    .prose thead {
        background: var(--blog-primary-dark-transparent);
    }
    
    .prose th {
        border: 1px solid var(--blog-primary-transparent);
        padding: 0.5rem 1rem;
        text-align: left;
        font-weight: var(--font-semibold, 600);
        color: var(--blog-text-bright);
    }
    
    .prose td {
        border: 1px solid var(--blog-primary-transparent);
        padding: 0.5rem 1rem;
        color: var(--blog-text);
    }

    /* Custom Elements */
    .prose .notice {
        background: var(--blog-primary-transparent);
        border: 1px solid var(--blog-primary-transparent);
        padding: 1rem;
        border-radius: 0.5rem;
        margin: 1.5rem 0;
        color: var(--blog-text);
    }

    .prose .notice-warning {
        background: rgba(var(--color-warning), 0.05);
        border-color: rgba(var(--color-warning), 0.1);
    }

    .prose .notice-info {
        background: rgba(var(--color-primary), 0.05);
        border-color: rgba(var(--color-primary), 0.1);
    }
</style>
